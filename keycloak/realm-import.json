{
  "id": "wirepact-demo",
  "realm": "wirepact-demo",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "f429ae21-809d-42c7-8c5a-e7acc03ab344",
        "name": "default-roles-wirepact-demo",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "wirepact-demo",
        "attributes": {}
      },
      {
        "id": "47993f22-d97d-4eb8-bfaa-1927bcbc45d3",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "wirepact-demo",
        "attributes": {}
      },
      {
        "id": "acc10ae1-d5fe-4eef-af20-9147f893f593",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "wirepact-demo",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "fc67057a-a7ce-40ef-8cfc-3a480b71cb0f",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "8a5572c8-0489-4539-9a30-cf139d5e7abd",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "afaa851d-9021-4fa8-844b-64121a8372bd",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "9ddefca4-b547-46f9-a2b7-a2d46d606f37",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "05e06c58-4f9c-46b6-b6bc-28d5b9436d39",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "2f6a64b0-0abc-4083-bbc7-a08cb221b5ad",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "3b34ea7f-2601-4d96-9547-51d915b710bc",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "4fcd29f2-6aca-4e33-91f7-3db3699c2649",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "019c5d19-b02d-4029-a94c-e2e35c12f16b",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "f0b5de0e-f791-41cb-b4f5-aa19aa005667",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "ade42739-ff77-42d2-b3b2-9733f87ef8ba",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "13dffdd4-ae93-4aab-ab69-77e60e27aa93",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "8381f102-a380-49c5-b815-84cc4cffd9ff",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "b8d5488e-1683-41ca-aa37-48bff37d0f1e",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "a703e3cf-f28c-46fa-9313-6dcdf862fab2",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "manage-clients",
                "manage-users",
                "manage-realm",
                "view-identity-providers",
                "create-client",
                "manage-authorization",
                "query-users",
                "manage-events",
                "query-groups",
                "manage-identity-providers",
                "impersonation",
                "query-clients",
                "view-authorization",
                "query-realms",
                "view-realm",
                "view-users",
                "view-events"
              ]
            }
          },
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "52f6c799-95bc-4e35-9e2c-e875076015d3",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "6f46f5ef-3c68-4c10-816b-9a837ea30d05",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "d663f1b3-c1f1-43db-ae3d-ffafc837086c",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        },
        {
          "id": "4a0f2a7f-aae5-4a2c-9112-c96c9dbab9b1",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
          "attributes": {}
        }
      ],
      "demo-translator": [],
      "security-admin-console": [],
      "admin-cli": [],
      "demo-app": [],
      "account-console": [],
      "broker": [
        {
          "id": "7142a328-7df7-413d-b4ff-3e93a921575c",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "afdefd5f-7799-4267-910a-c644da6378ec",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "329affc1-b4ae-4753-8136-e0a90dda4571",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        },
        {
          "id": "e9fc8d7f-7ed9-4283-9671-1bd33a297573",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        },
        {
          "id": "e91be179-ffce-4902-9743-297d36d21343",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        },
        {
          "id": "b8f24146-bc5a-4e38-8112-4820135d576b",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        },
        {
          "id": "23f24e7b-fe4c-48fe-820c-e5051685efe5",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        },
        {
          "id": "e189fd0b-9425-4a28-91c7-93d0251a01b3",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        },
        {
          "id": "fc88f624-6dd5-4df8-a2b6-fea49a747779",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "26238af1-66bd-4112-88ff-c31066e333a9",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "f429ae21-809d-42c7-8c5a-e7acc03ab344",
    "name": "default-roles-wirepact-demo",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "wirepact-demo"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": ["FreeOTP", "Google Authenticator"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "4e79b7e3-f0f0-4697-8fbc-249ac144a16e",
      "createdTimestamp": 1640784917526,
      "username": "service-account-demo-translator",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "demo-translator",
      "credentials": [],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-wirepact-demo"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "713bbdcf-9dee-43b1-90e7-b839eede898b",
      "createdTimestamp": 1640784569774,
      "username": "test",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Test",
      "lastName": "McTester",
      "credentials": [
        {
          "id": "7592b344-c674-43ad-97e2-933b7769b213",
          "type": "password",
          "createdDate": 1640784585517,
          "secretData": "{\"value\":\"CzHDu6qMt3ZNc+qQ9mIKQ2cygidzzrcfcH3SwSIlwAvWZgg0KPhnKTlsE+2yRJBLGJVCj3RamtS2aFMLax43hA==\",\"salt\":\"pJGelvhKjJwxbGrAODo/4A==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-wirepact-demo"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account"]
      }
    ]
  },
  "clients": [
    {
      "id": "26238af1-66bd-4112-88ff-c31066e333a9",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/wirepact-demo/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/wirepact-demo/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "757b832f-b62b-428f-b468-9d1ed4f18cf3",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/wirepact-demo/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/wirepact-demo/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "154fe217-be78-4ea3-ab1c-8475f223d031",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "ced2727d-a4b3-4eb4-86d9-843cc954919d",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "afdefd5f-7799-4267-910a-c644da6378ec",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "f6f2e808-afcd-4c68-862d-651ae98662cd",
      "clientId": "demo-app",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["http://*", "https://*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "8a32485f-d9c6-4533-891b-1595a092b9e2",
      "clientId": "demo-translator",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "tUz5fnNXXIZXaTUVdjY7nE6qP2dt7r5y",
      "redirectUris": ["http://*", "https://*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ff401933-9c5a-4757-ad5f-38a67381c4f1",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "70b7ca65-d174-4fc2-98a8-b9a0b8ddfdc9",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2b4e06ce-1baa-4282-ad42-35db2d400a0c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "1e837d93-45ab-4723-a86f-bfe8aacb940a",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "09f1394a-420e-4459-9f26-02c1421f1849",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/wirepact-demo/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/wirepact-demo/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "58deeee5-3a59-422f-a034-670aae4ce3d4",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "72f47e39-3cc3-4105-8d8f-a6e6616b3760",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "20a918b9-70a1-4b00-b843-82d63e9aa397",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "5889923f-e3d3-4622-b496-019acfda1e2c",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "32476913-6f71-4f9a-823c-61e237497fb0",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "59e33a5d-1b2a-4e59-aab8-97a685760811",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "eae722ea-a93d-4888-ab2b-42dde816c5f7",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "579f58df-8eb2-4d3e-a207-6d5b09737974",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d48d112e-6806-4c96-b1d2-0a440aef6026",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d435cffb-f76d-4e49-b492-cd521ac1633c",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "024612e7-eedb-4aef-abac-afeafc2d4ba5",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cbfe702c-3520-4478-879a-42f8cc44e95c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2cc035da-73a9-47bf-8ec7-be4d0c39910d",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f3a1dbb7-2faf-4000-8c1c-3fd6b986919c",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ac278e95-29ca-423d-8aea-07b4bae78610",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e02ffd98-f18f-4c3a-bfa4-ede7f7719039",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de9f2be4-cbe7-400a-b69f-44d4a8dbf30d",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9205aeae-21f4-4c11-80b7-92cc446fcd20",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00032dd0-e494-4843-b971-0a9b3862e212",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57a47b0a-a2c2-46e0-8651-ae0cd3710124",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0582792f-65d8-4650-a5e7-c3145201e9fc",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ada5263e-de0a-47ac-866b-90a7210ce841",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e9fa7e39-23c7-4de2-a92b-a3fed2109da4",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "a4e1e489-6d7f-4bbc-9bb0-bca365899fb9",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "060088a3-d39b-42de-b239-a72d0a953e34",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "b5c77994-6954-4aa6-891c-75624f750c39",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a99b3c19-3910-4fe4-bb36-9ef55442548f",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "6b03ecb8-c0a8-408d-a60e-13ce33e9d061",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6890c2c6-da4a-4b81-9f97-7da9fd8aaa21",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "256ae30b-53c3-4d71-93e7-162fe661db88",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "6129ae5c-fd23-4337-8c2d-35297069ff60",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "d6be2bcb-02d8-454d-89b5-d01e57e3d6b3",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "9b9c3059-6c82-4faf-83b4-80442f9d2ebb",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "cb7b944f-d8fb-4210-bab9-aecaa95d27e7",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "033d4668-a0ac-4d49-8a9e-a853281b1806",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "532b7502-d849-45bd-b94d-ec510fd2d6b6",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["role_list", "roles", "email", "web-origins", "profile"],
  "defaultOptionalClientScopes": ["microprofile-jwt", "offline_access", "address", "phone"],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "06a4e976-1de6-4d11-a3cd-9d2967959177",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "c1619472-1c5d-4123-b76b-a2d3bb44f531",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "096e3b16-8a86-41d4-94c7-0b57a97a5161",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "251a75f5-4c05-45f6-af4d-b148f87a502d",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "db8ff4c6-3a71-4b48-8e71-2ef15c6c41be",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "1e48f02f-8330-48e1-a413-72d222dd5236",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "5c66d8ce-6c7b-4cd9-bd9d-f08555bb2be2",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper"
          ]
        }
      },
      {
        "id": "ff6c499f-38ef-402f-9396-71b7562b7410",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "4dfd4681-01f0-4042-82ad-0e6e145b0c51",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAmCgwmZ2Bfbq2wWQlz07IGToTBoUMWltZYjU41VgtVHzF/lSOE21XgcM6EwckXlYOGYHoKjqc/2++vBCTQVFwzQ1qsFTE4FcQBgI5zNmLoXJ9Z7MvP5V542HyvvFi+0EYbjW+4WPJP68DHV/Y/ymuGeCnaluyAfWju1SPEvnzH2H4KGaVydu+Ub7ctPGiUZhygKiSCmAwG7ezDEtvSq+0i7KO5Pgu1ohfbsQYJPnJzL4oe2+n3wfjPTrSKNthaHm1peeabCLarau1ujR2x2VApM/cLeflEW6TlpmsRs3L9ESOWKNQWQ18hZjEAPBqR5TNCwCf9Hpygn9o5PnENUYx3QIDAQABAoIBAG4e0CWtR5V+N1w5pd+mjc0sKa7TRgBzEnqwOCS3v37hGs6Z1YWb4fQpHfO9fIXF1EiDq0o8x3lbH3iuqlRgo7nT1v4tK5uNhyxCGiD25UaAPOB7X1uuS9vT/MJSoydiklLZFP+8n182w5NT1hG90aIq5B9mo6slY01lwnKicWGpAQIzoghseQqcxsVfBbwup2ux7t74xhU6cVJ8fnZVy2tNZmnUCD4wpmqEpmtAr3JfZywbToDkwVDN2KT8gHnbVJayM7mawEr5eIMpO5BID71+8PI2XQh8CUsfz8R963gL6WGLokNv+EqNEo0pzn13T3dw4miUN74XAqynL4PWJ0ECgYEAy//MiryeTltdfzIcbZslXRuIMXTGPtMK1waS6gwike5lJTJ8XjWSQk/2CreZ/GLzrAaxSp7Po+N2bejpiaeBjsuAcR0QN/ASuqLwA9VHc06V65QLO30mr0DftxJoMMDQse0rEoUusavSu2EFb1vQYfuKShFEnre21qT2GVkZpo0CgYEAvvFeGAxTOqydwPYPq0Y+IJTvGMSq9yERILbfVpdD/JsmXATotfWdCeImRvwW5ahc4qbDabDKQ+iKmwRpWl9Lkfv5s5mTIrDZs+nA0h/nYuHxYwMwWhJ8YGmwxExIHZQktmYOXQo27pbAzvxJHHa7pH05vDqZph5O6WWbfNDBTJECgYBRJ7pflxoDYiWX7H+Sux3qJIHR6vrTE3JEiMD5i0pVc9mZKrR/ZiCBcP4Y1WHVHiiCT0dIwFUqhdsfboE52gGYpSy70ywYlNFenmONotOB88mApqyxReCV5+EYG6KHgq2Dmy5/d6xT0l9LXBWlb4k+8araPHRoD/4U9htRijjCIQKBgHQ6jpFK51re+kQcRBt47ZZ9sjE8feliun9UcgzOlTbt5mK7JkCk2svKWox5JSL04l2hL3BliineIokMHWlCesjJPg1CXZsPVeW7U4FUpE+/w2UG6ubZO9agX1aOLJO8usBAzVt7PUbsgz87uPFXoQ8Wnw9iCGdjKZvPGt/WXuPRAoGAfgDYVO3kLe600hnZcH4Q+6z8yCs333+T3/ScIfmwTGVT1vvPbkCQiEV9YcR0S3PMU96aq7+ehLKJMVYSuI11BBlpKtWczx8Xs0tD/tM1j6l286TSmDlFFm/A3EVesGaRbrZo5q0GKvego9DlHqy/zQTjNo/YJQoyshgUr364mj4="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICqTCCAZECBgF+BlnxajANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA13aXJlcGFjdC1kZW1vMB4XDTIxMTIyOTEzMTkyNFoXDTMxMTIyOTEzMjEwNFowGDEWMBQGA1UEAwwNd2lyZXBhY3QtZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJgoMJmdgX26tsFkJc9OyBk6EwaFDFpbWWI1ONVYLVR8xf5UjhNtV4HDOhMHJF5WDhmB6Co6nP9vvrwQk0FRcM0NarBUxOBXEAYCOczZi6FyfWezLz+VeeNh8r7xYvtBGG41vuFjyT+vAx1f2P8prhngp2pbsgH1o7tUjxL58x9h+ChmlcnbvlG+3LTxolGYcoCokgpgMBu3swxLb0qvtIuyjuT4LtaIX27EGCT5ycy+KHtvp98H4z060ijbYWh5taXnmmwi2q2rtbo0dsdlQKTP3C3n5RFuk5aZrEbNy/REjlijUFkNfIWYxADwakeUzQsAn/R6coJ/aOT5xDVGMd0CAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAczmlEycTWVUHU38OVhE9+uzwN7qe3zXBzgj//5TN+oogFpH3IN0QqSuy4HRbdA11MuoG0bzDLncOd2OGyQ/qZojNAP5x8ctooSfybPIw1CeBssXP6+ToPvbfnvNI/xOVOgtfSFNXAe78CECCMSieCv0x37whGlQgkwWywpasugZ2DF1c0MMqLpJ5e38sBmgyMliTWsIXZrwGdnQMgrqJHK1ldTZtg7RIQWb2aYzGZ28ycs2BnNb/JPpiF8gv1Xq2pwDgoZehmGeStGUaI1OwagZ8wSP1U6sSMNAd6SbkweSxOCC30xQc+FDMpa1xdtv/Jpfzp5qUa1/MUjL1kjkQ/Q=="
          ],
          "priority": ["100"]
        }
      },
      {
        "id": "1af00d58-79dd-474b-b6fe-ef32cda1d76c",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["3a9a8463-431b-4baa-bf43-6f46174051a0"],
          "secret": ["ap2ncx8_y1wka9p9hdtnUnDP1LPR2NUrtNUn6uapHo6a-DDsYUFVLvEwUG1dxSsZ1pdC89gInPZ57gepOgP8Iw"],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      },
      {
        "id": "48abc283-e1c3-480b-98f2-9defb56628c7",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpQIBAAKCAQEAqZMKqSX1gF6ZCQxLrcnBXfTDg9ZqrEWquU0QeZUyvppCYE3QVsKYcv3FseAdC2VCon7D9t0xC+IFNMKsgwk0fW3PznPH6yHcpZTurU/FHlOtlA6+dllLsLmJP3xNuqtVFgu2NjU8okW6BkfIxdZ51RZjQaennwJC2kERPji4XiRjy+Q4yMUVuayMiXzRFDIjAN16mZk93UweXFRkbsXkmGB/3M2c27fbmCeMfPGiJMWFZbImRtcJE3TItUqyXeJlS9Pb/HyyyMcrcv18Fr3X2IJ3CzRL5GIkBVr3wIy155AimcRkRefOveUP/O8l82Nq/j2je1KwR0RjmRjpc+81cQIDAQABAoIBAEkROeO+nnVMzaZPbQCaUb65a9GP/3Dxp+mmYjXxauckMvuqK95mhSfvX1MQ3ZL+c+LuumPR1YNoRZQBWjIwMjTlr0gnLXqMobWbYei92ZMCvWVxoPH/8hRZLeF0H04S61vPehkLgW/umYSBQ+qzStXdirFMm3Zxk/rVVKe56v9s+x493yXbp8fj2lGHZ9BD/35HgP7cPwG4i2wKAGDpJwvC9pjjWUvUPsd69VD6ocAIAobnAD32fl/Od5BYAMi0hqlBcZNdYcGq7muhDIBgaFZQZ8qAaaJTTPM73bA1VG2uLae+l/LLSVa5vkKumM4xVtr9ZXjAde/OQuh22wucZE0CgYEA8fW6U3cq0ypFp0/kRpQyUXISVyyAGKu1cSgl/xixfv0Q1LXMjuSoNLzA4X3sHwZbMOSflbODui+LZJ+1WZVT6Aa5qdiiifPjabKzN3vhmTlIjrxJrF6p/CYDi1tKDobFr3VKNOecMGii1lj3futHkOMzWnWJudL0LooJZmPlhOMCgYEAs2oKMLWv7gUHoixajFWOcqq7u9BDZpMATmRMBJ4SqB7xHMV1x6t1j3PUkhESRQ9Ckqq94gB+idJ9QSzEil/NXTm3E1G0rDLwESQ5Qo1he4bAcn6CJr7Qd4RRFArw2/wmQwqxXD0rAj5ZeBtaGWBedKH8kKN2Il/Jis13Bql1QJsCgYEAgu2MGLQoOUHrlQC3LrXskIPghsluu2rW8Ndf0C0Fhwjbfa6udTgoCPmGib5A8fzXhZqA/Fm6Uxp9HEMLt+EFGU3iU5UFRw7xJPXs4n4ncmk76PjcCOjkpKvRSSxp43hsKmiWchBORSepzcEwk74u6Kj41d86WpJbTX+mXIB75y8CgYEAmNnsmJcRrXzHhhi3g/uYAoUGr/m8knUGu8KjKQPq7SR/Un2/3D5tR6vtHAxDPmbD1uR0JUk6hPy5DX+wahs4gQYcvO7NOC+la1UrG1IMDQs+hczV4WCLhmdKFANGNITbrB4+AFF0hNLNso/K8PezQTaIUEmS6bIlqIVntFtGs6UCgYEAsHqoX6V04Fo9YCbAf8L7SbqETVvkj8nVeSwPQw0dceu8IlyGz5s1qbcZNRevjp80xGjvmbsIIXv+BZ9J5rt7FcO+liMZBh4lgXXc2xXhUBOBV3HKJZ+SsFQkOmGG03c02SGO8Iq3ZlWCPDOGIcRAvyJ4TPinnjEETQXKCaHWVkU="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICqTCCAZECBgF+BlnxxDANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA13aXJlcGFjdC1kZW1vMB4XDTIxMTIyOTEzMTkyNFoXDTMxMTIyOTEzMjEwNFowGDEWMBQGA1UEAwwNd2lyZXBhY3QtZGVtbzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKmTCqkl9YBemQkMS63JwV30w4PWaqxFqrlNEHmVMr6aQmBN0FbCmHL9xbHgHQtlQqJ+w/bdMQviBTTCrIMJNH1tz85zx+sh3KWU7q1PxR5TrZQOvnZZS7C5iT98TbqrVRYLtjY1PKJFugZHyMXWedUWY0Gnp58CQtpBET44uF4kY8vkOMjFFbmsjIl80RQyIwDdepmZPd1MHlxUZG7F5Jhgf9zNnNu325gnjHzxoiTFhWWyJkbXCRN0yLVKsl3iZUvT2/x8ssjHK3L9fBa919iCdws0S+RiJAVa98CMteeQIpnEZEXnzr3lD/zvJfNjav49o3tSsEdEY5kY6XPvNXECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAc3cga3llC5i48gsGvv9j4T+Nx5HO3pvzvnFfgsOcdzHhCi9IibuD+gmMyD7l3Ofr/KVkm0FrYto2+9J+WB8C+EKmAl2IulnnrNRvWxUBCSPYs3cDR4oN4NkRLmdTB9gJPNUDSa39hdngXq9RiV1dBRVBsFKrGkoCdK+lpLCuTnadsBIz84ftK+ho9WneV1L0rbv2CO14Ajom4ffVT9SpKUijsLrb3Hk19fGIEvIHtavOcp+ezm95M5wy9D/lEZ6EYZmuTcuZzsBvFVRhehYokJc4UmOsz6Wz5ZfwJLu8xaGNfR02VCApsPlk1kmjlb2lnyNdRUp8lvoipNArS43SJA=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "5fe829a2-9889-4c7e-b64c-b66484b4edc4",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["f085798c-c4fe-47ca-bf7b-d073c2ce52c9"],
          "secret": ["yqS33JuE7GVngi3bENslbQ"],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "4efc767c-59ac-4a7a-9914-9fffe8677d20",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f3ca760e-1d63-43d5-b862-fcb29b51788b",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "fe3f0304-2079-4928-bd07-890edb02d41a",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "34f5b85a-5058-4d1e-8e4d-078345753b35",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "e977abf4-bbbc-4a2d-b22c-d231bac3ac53",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "b9af34f0-b075-4f68-be32-0ef63ebcfe3f",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "b8a14aed-5ee3-4201-b343-2187215349e0",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "ff35c4f3-0412-47f4-9551-6d53d38feeee",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "1faada8f-9885-445a-b030-1214922c8bf9",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "56e8dca5-143f-4443-8de5-ea9130a8566e",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "7e20112a-aaf3-4046-a0fd-f8b67801d3da",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "87536a5a-aa98-4a8a-a581-c77630e65d50",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "06c58689-9599-4aef-a67d-6c304c103749",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "706b766f-c786-41f7-aff7-a5c57ce30786",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "fb4658eb-977c-4d0c-ba1d-93516685fc12",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "97262592-47ab-4b66-b130-f9bf7aac5339",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d0a4fd94-8dd6-406f-98b3-596d28c80332",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5f09134c-baee-4ae0-9d3d-3c513d0c76d1",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "e7560d35-1578-4a1a-aeed-cf66d6fba815",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "bc0e03ac-5041-4e93-8e34-886c5293e740",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "4eb9a3ab-78dc-4435-a4cc-3488ea926e58",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "ac521786-3d75-4afa-8d41-7d103ad9151d",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "cibaInterval": "5"
  },
  "keycloakVersion": "16.1.0",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
